version: "3.9"
services:
  api:
    build: .
    env_file: [.env]
    ports: ["8000:8000"]
    depends_on: [redis, redisq]
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/livez"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build: .
    env_file: [.env]
    depends_on: [redisq]
    command: python -m src.jobs.worker
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  redisq:
    image: redis:7-alpine
    ports: ["6380:6379"]
    volumes:
      - redisq_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  caddy:
    image: caddy:2-alpine
    ports: ["80:80", "443:443"]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    ports: ["9090:9090"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'

volumes:
  caddy_data: {}
  caddy_config: {}
  redis_data: {}
  redisq_data: {}
  prometheus_data: {}
