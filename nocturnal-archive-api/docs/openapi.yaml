openapi: 3.0.3
info:
  title: Nocturnal Archive API
  description: |
    Enterprise-grade academic research API with numeric grounding and finance analysis.
    
    ## Papers API (Demo)
    Public demo version with limited functionality. For commercial use, see FinSight vertical.
    
    ## FinSight API (Commercial)
    Advanced finance analysis with SEC filing retrieval, numeric grounding, and claim verification.
    
    ## Authentication
    All endpoints require API key authentication via `X-API-Key` header or `Authorization: Bearer <key>`.
    
    ## Error Handling
    All errors follow RFC 7807 Problem+JSON format with machine-readable error types.
    See [Error Catalog](problem_catalog.md) for complete error reference.
  version: 1.0.0
  contact:
    name: Nocturnal Archive Support
    email: contact@nocturnal.dev
    url: https://nocturnal.dev
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://nocturnal.dev/legal
  x-legal-disclaimer: |
    This service is not investment advice. See [Legal Disclaimers](legal_disclaimers.md) for complete terms.

servers:
  - url: https://api.nocturnal.dev
    description: Production server
  - url: http://localhost:8000
    description: Development server

security:
  - ApiKeyAuth: []
  - BearerAuth: []

paths:
  # Health endpoints
  /livez:
    get:
      summary: Liveness probe
      description: Kubernetes liveness probe - process is alive
      security: []
      responses:
        '200':
          description: Process is alive
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "alive"
  
  /readyz:
    get:
      summary: Readiness probe
      description: Kubernetes readiness probe - dependencies are OK
      security: []
      responses:
        '200':
          description: Ready to serve requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ready"
        '503':
          description: Not ready
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  # Papers API (Demo)
  /v1/api/papers/search:
    post:
      summary: Search academic papers (Demo)
      description: |
        Search academic papers with basic functionality.
        
        **Demo Limitations:**
        - Maximum 50 results per request
        - Basic search only
        - Rate limited to 100 requests per month
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PapersSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Rate limit exceeded
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /v1/api/papers/synthesize:
    post:
      summary: Synthesize academic papers (Demo)
      description: |
        Synthesize academic papers with basic functionality.
        
        **Demo Limitations:**
        - Maximum 500 words per summary
        - Maximum 10 papers per synthesis
        - Rate limited to 100 requests per month
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PapersSynthesizeRequest'
      responses:
        '200':
          description: Synthesis result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesisResult'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '429':
          description: Rate limit exceeded
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  # Finance API (Commercial)
  /v1/finance/filings/search:
    post:
      summary: Search SEC filings
      description: Search SEC filings in EDGAR database by company, form type, and date range
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilingSearchRequest'
      responses:
        '200':
          description: Filing search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingSearchResult'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /v1/finance/filings/fetch:
    post:
      summary: Fetch SEC filing
      description: Download and parse a specific SEC filing by accession number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilingFetchRequest'
      responses:
        '200':
          description: Filing content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingContent'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /v1/finance/extract:
    post:
      summary: Extract filing data
      description: Extract specific sections and tables from a SEC filing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilingExtractRequest'
      responses:
        '200':
          description: Extracted data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingExtractResult'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Validation error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /v1/finance/synthesize:
    post:
      summary: Synthesize filing with grounding
      description: Analyze SEC filing with numeric claim verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilingSynthesizeRequest'
      responses:
        '200':
          description: Synthesis result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilingSynthesisResult'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '422':
          description: Claims not grounded
          content:
            application/problem+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Problem'
                  - type: object
                    properties:
                      evidence:
                        type: array
                        items:
                          $ref: '#/components/schemas/Evidence'
        '429':
          description: Rate limit exceeded
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /v1/finance/filings/forms:
    get:
      summary: Get available form types
      description: Get list of available SEC form types
      responses:
        '200':
          description: Available form types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormTypes'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Bearer token for authentication

  schemas:
    # RFC 7807 Problem+JSON
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: Error type URI
          example: "https://nocturnal.dev/errors/validation-error"
        title:
          type: string
          description: Error title
          example: "Validation error"
        status:
          type: integer
          description: HTTP status code
          example: 422
        detail:
          type: string
          description: Error detail
          example: "The request data is invalid"
        instance:
          type: string
          description: Request ID for correlation
          example: "req_12345"
      required: [type, title, status]

    # Papers API schemas
    PapersSearchRequest:
      type: object
      properties:
        query:
          type: string
          description: Search query
          example: "machine learning"
        limit:
          type: integer
          minimum: 1
          maximum: 50
          default: 10
          description: Number of results (max 50 for demo)
        sources:
          type: array
          items:
            type: string
          default: ["openalex"]
          description: Data sources
        year_from:
          type: integer
          description: Start year filter
        year_to:
          type: integer
          description: End year filter
      required: [query]

    PapersSynthesizeRequest:
      type: object
      properties:
        paper_ids:
          type: array
          items:
            type: string
          description: Paper IDs to synthesize
        max_words:
          type: integer
          minimum: 50
          maximum: 500
          default: 200
          description: Maximum words (max 500 for demo)
        style:
          type: string
          default: "bullet_points"
          description: Summary style
      required: [paper_ids]

    SearchResult:
      type: object
      properties:
        papers:
          type: array
          items:
            $ref: '#/components/schemas/Paper'
        count:
          type: integer
          description: Number of results
        query_id:
          type: string
          description: Query identifier
        trace_id:
          type: string
          description: Request trace ID

    SynthesisResult:
      type: object
      properties:
        summary:
          type: string
          description: Generated summary
        paper_ids:
          type: array
          items:
            type: string
          description: Synthesized paper IDs
        word_count:
          type: integer
          description: Summary word count
        trace_id:
          type: string
          description: Request trace ID

    Paper:
      type: object
      properties:
        id:
          type: string
          description: Paper ID
        title:
          type: string
          description: Paper title
        authors:
          type: array
          items:
            $ref: '#/components/schemas/Author'
        year:
          type: integer
          description: Publication year
        doi:
          type: string
          description: DOI URL
        abstract:
          type: string
          description: Paper abstract
        citations_count:
          type: integer
          description: Number of citations
        venue:
          type: string
          description: Publication venue
        source:
          type: string
          description: Data source

    Author:
      type: object
      properties:
        name:
          type: string
          description: Author name
        orcid:
          type: string
          description: ORCID ID
        affiliation:
          type: string
          description: Author affiliation

    # Finance API schemas
    FilingSearchRequest:
      type: object
      properties:
        ticker:
          type: string
          description: Company ticker symbol
          example: "AAPL"
        cik:
          type: string
          description: Company CIK number
          example: "0000320193"
        form:
          type: string
          default: "10-K"
          description: Form type
          example: "10-K"
        year_range:
          type: array
          items:
            type: integer
          minItems: 2
          maxItems: 2
          default: [2020, 2024]
          description: Year range [start, end]
        limit:
          type: integer
          minimum: 1
          maximum: 50
          default: 10
          description: Maximum number of results
      required: []

    FilingFetchRequest:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
          example: "0000320193-24-000006"
      required: [accession]

    FilingExtractRequest:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
        sections:
          type: array
          items:
            type: string
          default: ["mda", "risk"]
          description: Sections to extract
        tables:
          type: boolean
          default: true
          description: Whether to extract tables
      required: [accession]

    FilingSynthesizeRequest:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
        context:
          type: object
          description: Additional context
        claims:
          type: array
          items:
            $ref: '#/components/schemas/NumericClaim'
          description: Claims to verify
        grounded:
          type: boolean
          default: true
          description: Whether to ground claims
      required: [accession]

    FilingSearchResult:
      type: object
      properties:
        filings:
          type: array
          items:
            $ref: '#/components/schemas/FilingInfo'
        count:
          type: integer
          description: Number of results
        query:
          type: object
          description: Search query parameters

    FilingInfo:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
        form:
          type: string
          description: Form type
        filing_date:
          type: string
          format: date
          description: Filing date
        url:
          type: string
          format: uri
          description: Filing URL
        company_name:
          type: string
          description: Company name
        ticker:
          type: string
          description: Company ticker
        cik:
          type: string
          description: Company CIK

    FilingContent:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
        sections:
          type: object
          additionalProperties:
            type: string
          description: Extracted sections
        tables:
          type: array
          items:
            $ref: '#/components/schemas/Table'
          description: Extracted tables
        metadata:
          type: object
          description: Parsing metadata
        content_length:
          type: integer
          description: Raw content length

    FilingExtractResult:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
        sections:
          type: object
          additionalProperties:
            type: string
          description: Extracted sections
        tables:
          type: array
          items:
            $ref: '#/components/schemas/Table'
          description: Extracted tables
        metadata:
          type: object
          description: Extraction metadata

    FilingSynthesisResult:
      type: object
      properties:
        accession:
          type: string
          description: Filing accession number
        summary:
          type: string
          description: Generated summary
        sections_analyzed:
          type: array
          items:
            type: string
          description: Sections analyzed
        tables_analyzed:
          type: integer
          description: Number of tables analyzed
        claims_verified:
          type: integer
          description: Number of claims verified
        metadata:
          type: object
          description: Analysis metadata

    Table:
      type: object
      properties:
        headers:
          type: array
          items:
            type: string
          description: Table headers
        rows:
          type: array
          items:
            type: array
            items:
              type: string
          description: Table rows
        row_count:
          type: integer
          description: Number of rows
        col_count:
          type: integer
          description: Number of columns

    FormTypes:
      type: object
      properties:
        forms:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: Form type
              description:
                type: string
                description: Form description

    # Numeric grounding schemas
    NumericClaim:
      type: object
      properties:
        id:
          type: string
          description: Claim identifier
        metric:
          type: string
          description: Metric name
        operator:
          type: string
          enum: ["=", "<", "<=", ">", ">=", "change", "yoy", "qoq"]
          description: Comparison operator
        value:
          type: number
          description: Expected value
        at:
          type: string
          format: date
          description: Date for comparison
        window:
          type: integer
          description: Window in days for change operator
      required: [id, metric, operator, value]

    Evidence:
      type: object
      properties:
        claim_id:
          type: string
          description: Claim identifier
        supported:
          type: boolean
          description: Whether claim is supported
        source_series:
          type: string
          description: Source data series
        details:
          type: object
          description: Verification details
